name: Build Check Push Artifacts

on:
  push:
    # If we don't set this, we get a duplicate run when tags are pushed on release creation
    branches:
      - '**'
  release:
    types: [published]

jobs:
  check-requirements:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4.1.0
        with:
          python-version: '3.x'
      - name: Check Standards
        run: |
          python -m pip install --upgrade pip
          pip install --progress-bar off .[analysis]
          python setup.py verify
  test:
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    services:
      postgres:
        image: postgres
        env:
	  POSTGRES_DB: localizedfields
          POSTGRES_USER: localizedfields
          POSTGRES_PASSWORD: localizedfields
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Run Tests
        env: 
          DATABASE_URL: 'postgres://localizedfields:localizedfields@localhost:5432/localizedfields'
        run: |
          tox
#  release:
#    runs-on: ubuntu-latest
#    permissions:
#      id-token: write
#      contents: read
#      actions: write
#      checks: write
#    needs: check-requirements
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1.7.0
#        with:
#          role-to-assume: arn:aws:iam::885890965519:role/vyn-backend-builds
#          aws-region: eu-west-1
#      - name: Set up Python
#        uses: actions/setup-python@v4.1.0
#        with:
#          python-version: '3.x'
#      - name: Login to Amazon Codeartifact
#        run: |
#          aws codeartifact login --tool pip --duration-seconds 2400 --domain vyn-production --domain-owner 885890965519 --repository vyn-artifacts
#      - name: Install dependencies
#        run: |
#          aws codeartifact login --tool twine --duration-seconds 2400 --domain vyn-production --domain-owner 885890965519 --repository vyn-artifacts
#          python -m pip install --upgrade pip
#          pip install poetry poetry-dynamic-versioning twine
#      - name: Build and publish
#        id: publish-package
#        run: |
#          poetry build
#          twine upload --verbose --repository codeartifact dist/*
#          echo "version=$(poetry-dynamic-versioning 2>&1 | head -1 | cut -d " " -f 2)" >> $GITHUB_OUTPUT
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#        with:
#          registries: 885890965519
#      - name: Docker meta django base
#        id: meta-django-base
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ${{ steps.login-ecr.outputs.registry }}/vyn/django-base
#          tags: |
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha
#      - name: Docker meta test-base
#        id: meta-django-test-base
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ${{ steps.login-ecr.outputs.registry }}/vyn/django-test-base
#          tags: |
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha
#      - name: Build and push django base
#        uses: docker/build-push-action@v4
#        with:
#          context: docker/django
#          target: django-base
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta-django-base.outputs.tags }}
#          labels: ${{ steps.meta-django-base.outputs.labels }}
#          secret-files: |
#            "pipconf=/home/runner/.config/pip/pip.conf"
#          build-args: |
#            CODE_VERSION=${{ steps.publish-package.outputs.version }}
#      - name: Build and push django test base
#        uses: docker/build-push-action@v4
#        with:
#          context: docker/django
#          target: django-test-base
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta-django-test-base.outputs.tags }}
#          labels: ${{ steps.meta-django-test-base.outputs.labels }}
#          secret-files: |
#            "pipconf=/home/runner/.config/pip/pip.conf"
#          build-args: |
#            CODE_VERSION=${{ steps.publish-package.outputs.version }}
